/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package layout.views.layout;

import java.awt.event.ContainerEvent;
import java.awt.event.ContainerListener;
import layout.views.SortUI.SortUI;
import common.Enum.BoardType;
import layout.views.BoardUI.BoardUI;
import layout.views.TaskUI.TaskCreate;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import layout.views.FilterUI.FilterUI;

/**
 *
 * @author tug70
 */
public class LayoutUI extends javax.swing.JPanel {

    /**
     *
     */
    private static final long serialVersionUID = 1L;

    /**
     * Creates new form Layout
     */
    public LayoutUI() {

        initComponents();
        setPMinimizeHidden();
        addLog();
        refreshAllBoard();
    }
    private BoardUI backlog;
    private BoardUI taken;
    private BoardUI ongoing;
    private BoardUI finish;

    public void addLog() {

        setBacklog(new BoardUI(BoardType.BACKLOG));
        taken = new BoardUI(BoardType.TAKEN);
        ongoing = new BoardUI(BoardType.ONGOING);
        setFinish(new BoardUI(BoardType.FINISH));

        getBacklog().addContainerListener(new componentChangeListener());
        getTaken().addContainerListener(new componentChangeListener());
        getOngoing().addContainerListener(new componentChangeListener());
        getFinish().addContainerListener(new componentChangeListener());
    }

    public void rerenderAllBoard() {
        //backlog.refresh();
        //taken.refresh();
        //ongoing.refresh();
        getFinish().refresh();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        LeftProjectPanel = new javax.swing.JPanel();
        SearchBarL = new javax.swing.JTextField();
        SearchIconL = new javax.swing.JButton();
        OnBacklogPanel = new javax.swing.JScrollPane();
        SortL = new javax.swing.JButton();
        FilterL = new javax.swing.JButton();
        AddTaskButton = new javax.swing.JButton();
        MinimizeButtonL = new javax.swing.JButton();
        MidProjectPanel = new javax.swing.JPanel();
        MinimizeButtonM = new javax.swing.JButton();
        MaximizeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DeMaximizeButton = new javax.swing.JButton();
        ProgressBoardButton = new javax.swing.JButton();
        MemberBoardButton = new javax.swing.JButton();
        OnTakenPanel = new javax.swing.JScrollPane();
        OnGoingPanel = new javax.swing.JScrollPane();
        RightProjectPanel = new javax.swing.JPanel();
        SearchIconR = new javax.swing.JButton();
        SearchBarR = new javax.swing.JTextField();
        OnFinishPanel = new javax.swing.JScrollPane();
        MinimizeButtonR = new javax.swing.JButton();
        filterR = new javax.swing.JButton();
        sortR = new javax.swing.JButton();
        DeMinimizeButtonR = new javax.swing.JButton();
        DeMinimizeButtonL = new javax.swing.JButton();
        DeMinimizeButtonM = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1400, 600));

        LeftProjectPanel.setBackground(new java.awt.Color(0, 153, 204));

        SearchBarL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        SearchIconL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        SearchIconL.setText("search");
        SearchIconL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchIconLActionPerformed(evt);
            }
        });

        OnBacklogPanel.setPreferredSize(new java.awt.Dimension(300, 450));

        SortL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        SortL.setText("sort");
        SortL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortLActionPerformed(evt);
            }
        });

        FilterL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        FilterL.setText("filter");
        FilterL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterLActionPerformed(evt);
            }
        });

        AddTaskButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        AddTaskButton.setText("add");
        AddTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTaskButtonActionPerformed(evt);
            }
        });

        MinimizeButtonL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        MinimizeButtonL.setText("< <");
        MinimizeButtonL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimizeButtonLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LeftProjectPanelLayout = new javax.swing.GroupLayout(LeftProjectPanel);
        LeftProjectPanelLayout.setHorizontalGroup(
        	LeftProjectPanelLayout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(LeftProjectPanelLayout.createSequentialGroup()
        			.addGap(21)
        			.addGroup(LeftProjectPanelLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(LeftProjectPanelLayout.createSequentialGroup()
        					.addGap(2)
        					.addComponent(OnBacklogPanel, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
        				.addGroup(LeftProjectPanelLayout.createParallelGroup(Alignment.TRAILING, false)
        					.addGroup(LeftProjectPanelLayout.createSequentialGroup()
        						.addComponent(AddTaskButton, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
        						.addGap(37)
        						.addComponent(SortL, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
        						.addGap(55)
        						.addComponent(FilterL, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))
        					.addGroup(LeftProjectPanelLayout.createSequentialGroup()
        						.addComponent(SearchBarL)
        						.addPreferredGap(ComponentPlacement.RELATED)
        						.addComponent(SearchIconL, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))))
        			.addGap(21))
        		.addGroup(LeftProjectPanelLayout.createSequentialGroup()
        			.addContainerGap(295, Short.MAX_VALUE)
        			.addComponent(MinimizeButtonL))
        );
        LeftProjectPanelLayout.setVerticalGroup(
        	LeftProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(LeftProjectPanelLayout.createSequentialGroup()
        			.addComponent(MinimizeButtonL, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(LeftProjectPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(SearchBarL, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(SearchIconL, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(OnBacklogPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(LeftProjectPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(AddTaskButton, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        				.addComponent(SortL, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        				.addComponent(FilterL, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        			.addGap(27))
        );
        LeftProjectPanel.setLayout(LeftProjectPanelLayout);

        MidProjectPanel.setBackground(new java.awt.Color(255, 204, 51));

        MinimizeButtonM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        MinimizeButtonM.setText(">> <<");
        MinimizeButtonM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimizeButtonMActionPerformed(evt);
            }
        });

        MaximizeButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        MaximizeButton.setText("< >");
        MaximizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaximizeButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Ontaken");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("Ongoing");

        DeMaximizeButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        DeMaximizeButton.setText("> <");
        DeMaximizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeMaximizeButtonActionPerformed(evt);
            }
        });

        ProgressBoardButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        ProgressBoardButton.setText("Progress Board");
        ProgressBoardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProgressBoardButtonActionPerformed(evt);
            }
        });

        MemberBoardButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        MemberBoardButton.setText("Member Board");
        MemberBoardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberBoardButtonActionPerformed(evt);
            }
        });

        OnTakenPanel.setPreferredSize(new java.awt.Dimension(300, 450));

        OnGoingPanel.setPreferredSize(new java.awt.Dimension(300, 450));

        javax.swing.GroupLayout MidProjectPanelLayout = new javax.swing.GroupLayout(MidProjectPanel);
        MidProjectPanelLayout.setHorizontalGroup(
        	MidProjectPanelLayout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(MidProjectPanelLayout.createSequentialGroup()
        			.addGap(21)
        			.addGroup(MidProjectPanelLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(MidProjectPanelLayout.createSequentialGroup()
        					.addGroup(MidProjectPanelLayout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(OnTakenPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        						.addComponent(jLabel1))
        					.addGap(18)
        					.addGroup(MidProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel2)
        						.addComponent(OnGoingPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        				.addGroup(MidProjectPanelLayout.createSequentialGroup()
        					.addComponent(MaximizeButton)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(DeMaximizeButton)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(MinimizeButtonM))
        				.addGroup(MidProjectPanelLayout.createSequentialGroup()
        					.addComponent(ProgressBoardButton, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(MemberBoardButton, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)))
        			.addGap(21))
        );
        MidProjectPanelLayout.setVerticalGroup(
        	MidProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(MidProjectPanelLayout.createSequentialGroup()
        			.addGroup(MidProjectPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(MinimizeButtonM, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        				.addComponent(MaximizeButton, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        				.addComponent(DeMaximizeButton, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE))
        			.addGap(13)
        			.addGroup(MidProjectPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel2)
        				.addComponent(jLabel1))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(MidProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(OnTakenPanel, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(OnGoingPanel, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(MidProjectPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(MemberBoardButton, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        				.addComponent(ProgressBoardButton, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap())
        );
        MidProjectPanel.setLayout(MidProjectPanelLayout);

        RightProjectPanel.setBackground(new java.awt.Color(102, 204, 0));

        SearchIconR.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        SearchIconR.setText("search");
        SearchIconR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchIconRActionPerformed(evt);
            }
        });

        SearchBarR.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        OnFinishPanel.setPreferredSize(new java.awt.Dimension(300, 450));

        MinimizeButtonR.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        MinimizeButtonR.setText("> >");
        MinimizeButtonR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimizeButtonRActionPerformed(evt);
            }
        });

        filterR.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        filterR.setText("filter");
        filterR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterRActionPerformed(evt);
            }
        });

        sortR.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        sortR.setText("sort");
        sortR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RightProjectPanelLayout = new javax.swing.GroupLayout(RightProjectPanel);
        RightProjectPanelLayout.setHorizontalGroup(
        	RightProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(RightProjectPanelLayout.createSequentialGroup()
        			.addGap(22)
        			.addGroup(RightProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(RightProjectPanelLayout.createSequentialGroup()
        					.addGroup(RightProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(SearchBarR, GroupLayout.PREFERRED_SIZE, 218, GroupLayout.PREFERRED_SIZE)
        						.addComponent(sortR, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(RightProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(RightProjectPanelLayout.createSequentialGroup()
        							.addGap(0, 0, Short.MAX_VALUE)
        							.addComponent(filterR, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))
        						.addGroup(RightProjectPanelLayout.createSequentialGroup()
        							.addComponent(SearchIconR, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
        							.addGap(0, 0, Short.MAX_VALUE))))
        				.addComponent(OnFinishPanel, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
        			.addGap(22))
        		.addGroup(Alignment.TRAILING, RightProjectPanelLayout.createSequentialGroup()
        			.addContainerGap(295, Short.MAX_VALUE)
        			.addComponent(MinimizeButtonR))
        );
        RightProjectPanelLayout.setVerticalGroup(
        	RightProjectPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(RightProjectPanelLayout.createSequentialGroup()
        			.addComponent(MinimizeButtonR, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        			.addGap(5)
        			.addGroup(RightProjectPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(SearchBarR, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        				.addComponent(SearchIconR, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(OnFinishPanel, GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        			.addGap(12)
        			.addGroup(RightProjectPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(sortR, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        				.addComponent(filterR))
        			.addContainerGap())
        );
        RightProjectPanel.setLayout(RightProjectPanelLayout);

        DeMinimizeButtonR.setBackground(new java.awt.Color(153, 255, 51));
        DeMinimizeButtonR.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        DeMinimizeButtonR.setText("< >");
        DeMinimizeButtonR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeMinimizeButtonRActionPerformed(evt);
            }
        });

        DeMinimizeButtonL.setBackground(new java.awt.Color(0, 153, 204));
        DeMinimizeButtonL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        DeMinimizeButtonL.setText("< >");
        DeMinimizeButtonL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeMinimizeButtonLActionPerformed(evt);
            }
        });

        DeMinimizeButtonM.setBackground(new java.awt.Color(255, 153, 51));
        DeMinimizeButtonM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        DeMinimizeButtonM.setText("< >");
        DeMinimizeButtonM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeMinimizeButtonMActionPerformed(evt);
            }
        });
        GroupLayout groupLayout = new GroupLayout(this);
        groupLayout.setHorizontalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(12)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(DeMinimizeButtonL, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
        					.addGap(538)
        					.addComponent(DeMinimizeButtonM, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
        					.addGap(538)
        					.addComponent(DeMinimizeButtonR, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addComponent(LeftProjectPanel, GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
        					.addGap(13)
        					.addComponent(MidProjectPanel, GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        					.addGap(15)
        					.addComponent(RightProjectPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        			.addGap(12))
        );
        groupLayout.setVerticalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(10)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(DeMinimizeButtonL, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        				.addComponent(DeMinimizeButtonM, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
        				.addComponent(DeMinimizeButtonR, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE))
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(LeftProjectPanel, GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
        				.addComponent(MidProjectPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(RightProjectPanel, GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE))
        			.addGap(13))
        );
        setLayout(groupLayout);
    }// </editor-fold>//GEN-END:initComponents

    private void SearchIconLActionPerformed(java.awt.event.ActionEvent evt) {
        getBacklog().search(SearchBarL.getText());
    }

    private void SearchIconRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchIconRActionPerformed
        getFinish().search(SearchBarR.getText());

    }//GEN-LAST:event_SearchIconRActionPerformed

    private void MaximizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaximizeButtonActionPerformed
        LeftProjectPanel.setVisible(false);
        RightProjectPanel.setVisible(false);
        MaximizeButton.setVisible(false);
        MinimizeButtonM.setVisible(false);
        DeMaximizeButton.setVisible(true);
        DeMinimizeButtonL.setVisible(true);
        DeMinimizeButtonR.setVisible(true);
    }//GEN-LAST:event_MaximizeButtonActionPerformed

    private void SortLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortLActionPerformed
        SortUI sortL = new SortUI(getBacklog());
        sortL.setVisible(true);
    }//GEN-LAST:event_SortLActionPerformed

    

    private void sortRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortRActionPerformed
        SortUI sortR = new SortUI(getFinish());
        sortR.setVisible(true);
    }//GEN-LAST:event_sortRActionPerformed

    private void DeMinimizeButtonLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeMinimizeButtonLActionPerformed
        LeftProjectPanel.setVisible(true);
        DeMinimizeButtonL.setVisible(false);
        MaximizeButton.setVisible(true);
    }//GEN-LAST:event_DeMinimizeButtonLActionPerformed

    private void DeMinimizeButtonMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeMinimizeButtonMActionPerformed
        MidProjectPanel.setVisible(true);
        DeMinimizeButtonM.setVisible(false);
    }//GEN-LAST:event_DeMinimizeButtonMActionPerformed

    private void DeMinimizeButtonRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeMinimizeButtonRActionPerformed
        RightProjectPanel.setVisible(true);
        DeMinimizeButtonR.setVisible(false);
        MaximizeButton.setVisible(true);
    }//GEN-LAST:event_DeMinimizeButtonRActionPerformed
    
    

    private void DeMaximizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeMaximizeButtonActionPerformed
        //TODO handle condition when maximize then deminimize both left and right and the demaximize still there
        LeftProjectPanel.setVisible(true);
        RightProjectPanel.setVisible(true);
        DeMaximizeButton.setVisible(false);
        MaximizeButton.setVisible(true);
        MinimizeButtonM.setVisible(true);
        DeMinimizeButtonL.setVisible(false);
        DeMinimizeButtonR.setVisible(false);
    }//GEN-LAST:event_DeMaximizeButtonActionPerformed

    private void MinimizeButtonMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimizeButtonMActionPerformed
        MidProjectPanel.setVisible(false);
        DeMinimizeButtonM.setVisible(true);
        
    }//GEN-LAST:event_MinimizeButtonMActionPerformed

    private void MinimizeButtonRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimizeButtonRActionPerformed
        RightProjectPanel.setVisible(false);
        DeMinimizeButtonR.setVisible(true);
        MaximizeButton.setVisible(false);
        
    }//GEN-LAST:event_MinimizeButtonRActionPerformed
    
    private void MinimizeButtonLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimizeButtonLActionPerformed
        LeftProjectPanel.setVisible(false);
        DeMinimizeButtonL.setVisible(true);
        MaximizeButton.setVisible(false);
    }//GEN-LAST:event_MinimizeButtonLActionPerformed

    private void AddTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTaskButtonActionPerformed
        TaskCreate taskcreate = new TaskCreate(getBacklog());
        taskcreate.setVisible(true);
    }//GEN-LAST:event_AddTaskButtonActionPerformed

    private void FilterLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterLActionPerformed
        FilterUI filterL = new FilterUI(getBacklog());
        filterL.setVisible(true);
    }//GEN-LAST:event_FilterLActionPerformed

    private void filterRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterRActionPerformed
        FilterUI filterR = new FilterUI(getFinish());
        filterR.setVisible(true);
    }//GEN-LAST:event_filterRActionPerformed

    private void ProgressBoardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProgressBoardButtonActionPerformed
        ProgressBoard2 Pboard = new ProgressBoard2();
        Pboard.setVisible(true);

    }//GEN-LAST:event_ProgressBoardButtonActionPerformed

    private void MemberBoardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberBoardButtonActionPerformed
        TeamMemberBoard Mboard = new TeamMemberBoard();
        Mboard.setVisible(true);

    }//GEN-LAST:event_MemberBoardButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddTaskButton;
    private javax.swing.JButton DeMaximizeButton;
    private javax.swing.JButton DeMinimizeButtonL;
    private javax.swing.JButton DeMinimizeButtonM;
    private javax.swing.JButton DeMinimizeButtonR;
    private javax.swing.JButton FilterL;
    private javax.swing.JPanel LeftProjectPanel;
    private javax.swing.JButton MaximizeButton;
    private javax.swing.JButton MemberBoardButton;
    private javax.swing.JPanel MidProjectPanel;
    private javax.swing.JButton MinimizeButtonL;
    private javax.swing.JButton MinimizeButtonM;
    private javax.swing.JButton MinimizeButtonR;
    private javax.swing.JScrollPane OnBacklogPanel;
    private javax.swing.JScrollPane OnFinishPanel;
    private javax.swing.JScrollPane OnGoingPanel;
    private javax.swing.JScrollPane OnTakenPanel;
    private javax.swing.JButton ProgressBoardButton;
    private javax.swing.JPanel RightProjectPanel;
    private javax.swing.JTextField SearchBarL;
    private javax.swing.JTextField SearchBarR;
    private javax.swing.JButton SearchIconL;
    private javax.swing.JButton SearchIconR;
    private javax.swing.JButton SortL;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton filterR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton sortR;
    // End of variables declaration//GEN-END:variables

    public void setPMinimizeHidden() {
        DeMinimizeButtonL.setVisible(false);
        DeMinimizeButtonR.setVisible(false);
        DeMinimizeButtonM.setVisible(false);
        DeMaximizeButton.setVisible(false);
    }

    public void refreshAllBoard() {
        getBacklog().refresh();
        getTaken().refresh();
        getOngoing().refresh();
        getFinish().refresh();
        getOnBacklogPanel().setColumnHeaderView(null);
        OnTakenPanel.setColumnHeaderView(null);
        OnGoingPanel.setColumnHeaderView(null);
        getOnFinishPanel().setColumnHeaderView(null);
        getOnBacklogPanel().setViewportView(getBacklog());
        OnTakenPanel.setViewportView(getTaken());
        OnGoingPanel.setViewportView(getOngoing());
        getOnFinishPanel().setViewportView(getFinish());
        
        if (getBacklog().getNumOfCardDisplay() <4) {
            getOnBacklogPanel().setViewportView(null);
            getOnBacklogPanel().setColumnHeaderView(getBacklog());
        }
        if (getTaken().getNumOfCardDisplay() <4) {
            OnTakenPanel.setViewportView(null);
            OnTakenPanel.setColumnHeaderView(getTaken());
        }
        if (getOngoing().getNumOfCardDisplay() <4) {
            OnGoingPanel.setViewportView(null);
            OnGoingPanel.setColumnHeaderView(getOngoing());
        }
        if (getFinish().getNumOfCardDisplay() <4) {
            getOnFinishPanel().setViewportView(null);
            getOnFinishPanel().setColumnHeaderView(getFinish());
        }

    }

    class componentChangeListener implements ContainerListener {

        @Override
        public void componentAdded(ContainerEvent arg0) {

        }

        @Override
        public void componentRemoved(ContainerEvent arg0) {
            LayoutUI.this.revalidate();
        }

    }

    /**
     * @return the backlog
     */
    public BoardUI getBacklog() {
        return backlog;
    }

    /**
     * @return the taken
     */
    public BoardUI getTaken() {
        return taken;
    }

    /**
     * @return the ongoing
     */
    public BoardUI getOngoing() {
        return ongoing;
    }

    /**
     * @return the finish
     */
    public BoardUI getFinish() {
        return finish;
    }

    /**
     * @param backlog the backlog to set
     */
    public void setBacklog(BoardUI backlog) {
        this.backlog = backlog;
    }

    /**
     * @param finish the finish to set
     */
    public void setFinish(BoardUI finish) {
        this.finish = finish;
    }

    /**
     * @return the OnBacklogPanel
     */
    public javax.swing.JScrollPane getOnBacklogPanel() {
        return OnBacklogPanel;
    }

    /**
     * @return the OnFinishPanel
     */
    public javax.swing.JScrollPane getOnFinishPanel() {
        return OnFinishPanel;
    }
}
