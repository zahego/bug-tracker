/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user;

import TrungAndAnhIntegration.common.TaskHold.TaskHold;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import project.Projecthold;
import screen.ScreenUI;
import team.Userhold;

/**
 *
 * @author tug70
 */
public class UserUICreateUpdate extends javax.swing.JFrame {

    /**
     * Creates new form UserUICreateUpdate
     */
    public UserUICreateUpdate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameString = new javax.swing.JTextField();
        IDint = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        buttonSection = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        emailLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        roleLabel = new javax.swing.JLabel();
        IDLabel = new javax.swing.JLabel();
        errorText = new javax.swing.JLabel();
        emailString = new javax.swing.JTextField();
        passwordString = new javax.swing.JTextField();
        createUpdateLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        ImageImage = new javax.swing.JTextField();
        roleRole = new javax.swing.JTextField();
        accessRangeLabel = new javax.swing.JLabel();
        accessRangeInt = new javax.swing.JTextField();
        sendAnEmailLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emailSendArea = new javax.swing.JTextArea();
        confirmPasswordLabel = new javax.swing.JLabel();
        confirmPasswordString = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        IDint.setEditable(false);

        nameLabel.setText("Name:");

        submitButton.setText("add");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonSectionLayout = new javax.swing.GroupLayout(buttonSection);
        buttonSection.setLayout(buttonSectionLayout);
        buttonSectionLayout.setHorizontalGroup(
            buttonSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonSectionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitButton)
                .addGap(18, 18, 18)
                .addComponent(deleteButton)
                .addGap(6, 6, 6))
        );
        buttonSectionLayout.setVerticalGroup(
            buttonSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonSectionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(deleteButton))
                .addContainerGap())
        );

        emailLabel.setText("Email:");

        passwordLabel.setText("Password:");

        roleLabel.setText("Role:");

        IDLabel.setText("ID:");

        errorText.setForeground(new java.awt.Color(255, 51, 51));
        errorText.setText("error");

        createUpdateLabel.setText("CREATE USER");

        imageLabel.setText("Profile Pic:");

        accessRangeLabel.setText("Access Range:");

        sendAnEmailLabel.setText("Send an email:");

        emailSendArea.setColumns(20);
        emailSendArea.setRows(5);
        jScrollPane1.setViewportView(emailSendArea);

        confirmPasswordLabel.setText("Confirm password:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonSection, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(errorText))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(createUpdateLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailLabel)
                                    .addComponent(passwordLabel)
                                    .addComponent(IDLabel)
                                    .addComponent(imageLabel)
                                    .addComponent(nameLabel))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(IDint, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                    .addComponent(nameString)
                                    .addComponent(passwordString)
                                    .addComponent(emailString)
                                    .addComponent(ImageImage)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(accessRangeLabel)
                                        .addComponent(confirmPasswordLabel))
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(confirmPasswordString)
                                        .addComponent(accessRangeInt)))
                                .addComponent(sendAnEmailLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(roleLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                    .addComponent(roleRole, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createUpdateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorText)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IDLabel)
                    .addComponent(IDint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameString, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ImageImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLabel)
                            .addComponent(emailString, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(passwordLabel)
                        .addComponent(passwordString, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPasswordLabel)
                    .addComponent(confirmPasswordString, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleLabel)
                    .addComponent(roleRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessRangeLabel)
                    .addComponent(accessRangeInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendAnEmailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addComponent(buttonSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        //TODO handle case of error
        //add that new project Object to the projecthold ArrayList

        User addUser = createUserFromFields();

        //TODO refactor this method to make better sense and reduce time complexity
        //check if it's update or not
        boolean updated = false;
        //for updating new project
        for (int i = 0; i < Userhold.getUsers().size(); i++) {
            if (addUser.getID() == Userhold.getUsers().get(i).getID()) {
                //replace the project at i
                Userhold.update(i, addUser);
                updated = true;
                break;
            }
        }
        //for inserting new project
        if (addUser.getID() != -1 && updated == false) {
            Userhold.insert(addUser);
        }
        //rerender the dropdown in screenUI
        ScreenUI.getTeamUI().renderUI();
        //Close the Project create window
        this.dispose();
    }//GEN-LAST:event_submitButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        for (int i = 0; i < Userhold.getUsers().size(); i++) {
            if (Integer.parseInt(this.getIDint().getText()) == Userhold.getUsers().get(i).getID()) {
                Userhold.delete(Userhold.getUsers().get(i));
                break;
            }
        }
        //rerender the dropdown in screenUI
        ScreenUI.getTeamUI().renderUI();
        //Close the Project create window
        this.dispose();
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserUICreateUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserUICreateUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserUICreateUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserUICreateUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserUICreateUpdate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IDLabel;
    private javax.swing.JTextField IDint;
    private javax.swing.JTextField ImageImage;
    private javax.swing.JTextField accessRangeInt;
    private javax.swing.JLabel accessRangeLabel;
    private javax.swing.JPanel buttonSection;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JTextField confirmPasswordString;
    private javax.swing.JLabel createUpdateLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextArea emailSendArea;
    private javax.swing.JTextField emailString;
    private javax.swing.JLabel errorText;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameString;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField passwordString;
    private javax.swing.JLabel roleLabel;
    private javax.swing.JTextField roleRole;
    private javax.swing.JLabel sendAnEmailLabel;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
    public User createUserFromFields() {
        try {
            //get all the attributes to insert in Project class
            int ID = Integer.parseInt(this.getIDint().getText());
            Role role = Role.valueOf(this.getRoleRole().getText());
            String profilePic=this.getImageImage().getText();
            String name= this.getNameString().getText();
            String email= this.getEmailString().getText();
            String password= this.getPasswordString().getText();
            String passwordConfirm = this.getConfirmPasswordString().getText();
            int accessRange= Integer.parseInt(this.getAccessRangeInt().getText());
            TaskHold taskhold=new TaskHold();
            Projecthold projecthold=new Projecthold();
            
            User addUser = new User(-1, Role.DEVELOPER, "", "", "", "", -1, projecthold, taskhold);
            //add all attribute to a new project Object
            //condition to check if password entered correctly
            if(password.equals(passwordConfirm)){
                addUser = new User(ID, role, name, profilePic, email, password, accessRange, projecthold, taskhold);
            }
            return addUser;
        } catch (Exception e) {
            System.out.println(e);
            return new User(-1);
        }

    }

    public void setUpdateInformation(User user) {
        this.setIDint(user.getID());
        this.setRoleRole(user.getRole());
        this.setNameString(user.getName());
        this.setImageImage(user.getProfilePic());
        this.setEmailString(user.getEmail());
        
        //TODO handle the logic behind editing that need password
        this.setPasswordString(user.getPassword());
        this.setConfirmPasswordString(user.getPassword());
        
        this.setAccessRangeInt(user.getAccessRange());
        //TODO see if pm and admin can deal with Taskhold and Projecthold here

    }
    /**
             * @return the IDint
             */

    public javax.swing.JTextField getIDint() {
        return IDint;
    }

    /**
     * @param IDint the IDint to set
     */
    public void setIDint(int IDint) {
        this.IDint.setText(String.valueOf(IDint));
    }

    /**
     * @return the ImageImage
     */
    public javax.swing.JTextField getImageImage() {
        return ImageImage;
    }

    /**
     * @param ImageImage the ImageImage to set
     */
    public void setImageImage(String ImageImage) {
        /*ImageIcon icon = new ImageIcon(ImageImage);
        icon = new ImageIcon(icon.getImage().getScaledInstance(110, 110,  java.awt.Image.SCALE_SMOOTH)); 
        this.ImageImage.setPortrait(icon);*/
        this.ImageImage.setText(ImageImage);
    }

    /**
     * @return the accessRangeInt
     */
    public javax.swing.JTextField getAccessRangeInt() {
        return accessRangeInt;
    }

    /**
     * @param accessRangeInt the accessRangeInt to set
     */
    public void setAccessRangeInt(int accessRangeInt) {
        this.accessRangeInt.setText(String.valueOf(accessRangeInt));
    }

    /**
     * @return the createUpdateLabel
     */
    public javax.swing.JLabel getCreateUpdateLabel() {
        return createUpdateLabel;
    }

    /**
     * @param createUpdateLabel the createUpdateLabel to set
     */
    public void setCreateUpdateLabel(String createUpdateLabel) {
        this.createUpdateLabel.setText(createUpdateLabel);
    }

    /**
     * @return the deleteButton
     */
    public javax.swing.JButton getDeleteButton() {
        return deleteButton;
    }

    /**
     * @return the emailSendArea
     */
    public javax.swing.JTextArea getEmailSendArea() {
        return emailSendArea;
    }

    /**
     * @param emailSendArea the emailSendArea to set
     */
    public void setEmailSendArea(String emailSendArea) {
        this.emailSendArea.setText(emailSendArea);
    }

    /**
     * @return the emailString
     */
    public javax.swing.JTextField getEmailString() {
        return emailString;
    }

    /**
     * @param emailString the emailString to set
     */
    public void setEmailString(String emailString) {
        this.emailString.setText(emailString);
    }

    /**
     * @return the nameString
     */
    public javax.swing.JTextField getNameString() {
        return nameString;
    }

    /**
     * @param nameString the nameString to set
     */
    public void setNameString(String nameString) {
        this.nameString.setText(nameString);
    }

    /**
     * @return the passwordString
     */
    public javax.swing.JTextField getPasswordString() {
        return passwordString;
    }

    /**
     * @param passwordString the passwordString to set
     */
    public void setPasswordString(String passwordString) {
        //TODO set this to protected text
        this.passwordString.setText(passwordString);
    }

    /**
     * @return the roleRole
     */
    public javax.swing.JTextField getRoleRole() {
        return roleRole;
    }

    /**
     * @param roleRole the roleRole to set
     */
    public void setRoleRole(Role roleRole) {
        this.roleRole.setText(roleRole.name());
    }

    /**
     * @return the confirmPasswordString
     */
    public javax.swing.JTextField getConfirmPasswordString() {
        return confirmPasswordString;
    }

    /**
     * @param confirmPasswordString the confirmPasswordString to set
     */
    public void setConfirmPasswordString(String confirmPasswordString) {
        //TODO set this to protected text
        this.confirmPasswordString.setText(confirmPasswordString);
    }

    /**
     * @return the submitButton
     */
    public javax.swing.JButton getSubmitButton() {
        return submitButton;
    }

    /**
     * @param submitButton the submitButton to set
     */
    public void setSubmitButton(String submitButton) {
        this.submitButton.setText(submitButton);
    }
}
